global:
  scrape_interval: 15s
  evaluation_interval: 15s

rule_files:
  # - "first_rules.yml"
  # - "second_rules.yml"

scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']

  # Next.js Application
  - job_name: 'xhunt-app'
    static_configs:
      - targets: ['app:3000']
    metrics_path: '/api/metrics'
    scrape_interval: 30s
    scrape_timeout: 10s

  # PostgreSQL
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres:5432']
    scrape_interval: 30s

  # Redis
  - job_name: 'redis'
    static_configs:
      - targets: ['redis:6379']
    scrape_interval: 30s

  # Nginx
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx:8080']
    metrics_path: '/nginx_status'
    scrape_interval: 30s

  # Node Exporter (if added)
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 30s

  # cAdvisor for container metrics (if added)
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 30s

alerting:
  alertmanagers:
    - static_configs:
        - targets:
          # - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  - "alert_rules.yml"

# Alerting rules
# alert_rules.yml should contain:
# groups:
#   - name: xhunt.rules
#     rules:
#       - alert: HighErrorRate
#         expr: rate(http_requests_total{status=~"5.."}[5m]) > 0.1
#         for: 5m
#         labels:
#           severity: warning
#         annotations:
#           summary: High error rate detected
#           description: "Error rate is {{ $value }} errors per second"
#       
#       - alert: HighMemoryUsage
#         expr: (node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes) / node_memory_MemTotal_bytes > 0.8
#         for: 5m
#         labels:
#           severity: warning
#         annotations:
#           summary: High memory usage
#           description: "Memory usage is above 80%"
#       
#       - alert: DatabaseDown
#         expr: up{job="postgres"} == 0
#         for: 1m
#         labels:
#           severity: critical
#         annotations:
#           summary: Database is down
#           description: "PostgreSQL database is not responding"
#       
#       - alert: ApplicationDown
#         expr: up{job="xhunt-app"} == 0
#         for: 1m
#         labels:
#           severity: critical
#         annotations:
#           summary: Application is down
#           description: "X-Hunt application is not responding"
